{"version":3,"sources":["webpack://reactist/webpack/universalModuleDefinition","webpack://reactist/webpack/bootstrap","webpack://reactist/external \"prop-types\"","webpack://reactist/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://reactist/external \"classnames\"","webpack://reactist/./src/components/utils/PositioningUtils.js","webpack://reactist/./src/components/Tooltip.jsx","webpack://reactist/./src/components/Button.jsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","hasEnoughSpace","windowDimensions","elementDimensions","wrapperDimensions","wrapperPosition","position","gap","arguments","length","undefined","windowHeight","height","windowWidth","width","elementHeight","elementWidth","wrapperHeight","wrapperWidth","wrapperX","x","wrapperY","y","verticalPosition","_calculateVerticalPosition","horizontalPosition","_calculateHorizontalPosition","canPlaceVertically","canPlaceHorizontally","calculatePosition","calculateTopCenterPosition","calculateRightCenterPosition","calculateBottomCenterPosition","calculateLeftCenterPosition","Tooltip","props","context","_this","_classCallCheck","this","_defineProperty","_assertThisInitialized","_possibleConstructorReturn","_getPrototypeOf","_delayAction","setState","visible","hideOnScroll","_initScrollListener","delayShow","_clearDelayTimeout","_removeScrollListener","delayHide","_this$props","allowVaguePositioning","gapSize","wrapperRect","wrapper","getBoundingClientRect","tooltipRect","tooltip","documentEl","document","documentElement","node","foundParent","getComputedStyle","getPropertyValue","parentElement","nodeRect","tooltipDimensions","wrapperPositionRelative","left","top","wrapperPositionAbsolute","positionsToTry","index","currentPosition","tooltipPosition","style","concat","className","_getClassNameForPosition","state","_this$props2","tooltipClassName","inverted","classNames","arrow_top","arrow_right","arrow_bottom","arrow_left","React","Component","nextProps","nextState","text","children","_updateTooltipPosition","addEventListener","_hide","removeEventListener","delayTimeout","clearTimeout","actionFn","delay","setTimeout","_this2","external_root_React_commonjs2_react_commonjs_react_amd_react_default","a","createElement","tooltipClass","wrapperClass","wrapperClassName","onMouseEnter","_show","onMouseLeave","ref","displayName","defaultProps","propTypes","PropTypes","oneOf","bool","oneOfType","string","arrayOf","isRequired","number","Button","event","preventDefault","disabled","loading","onClick","data_tip","secondary","small","large","white","busy","danger","button","react__WEBPACK_IMPORTED_MODULE_1___default","_onClick","_Tooltip__WEBPACK_IMPORTED_MODULE_4__","func"],"mappings":"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","file":"Button.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"), require(\"classnames\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"reactist\", [\"prop-types\", \"react\", \"classnames\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reactist\"] = factory(require(\"prop-types\"), require(\"react\"), require(\"classnames\"));\n\telse\n\t\troot[\"reactist\"] = factory(root[\"prop-types\"], root[\"React\"], root[\"classnames\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","const hasEnoughSpace = (\n    windowDimensions,\n    elementDimensions,\n    wrapperDimensions,\n    wrapperPosition,\n    position,\n    gap = 0\n) => {\n    const { height: windowHeight, width: windowWidth } = windowDimensions\n    const { height: elementHeight, width: elementWidth } = elementDimensions\n    const { height: wrapperHeight, width: wrapperWidth } = wrapperDimensions\n    const { x: wrapperX, y: wrapperY } = wrapperPosition\n\n    const verticalPosition = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const horizontalPosition = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const canPlaceVertically =\n        verticalPosition >= 0 && verticalPosition + elementWidth <= windowWidth\n    const canPlaceHorizontally =\n        horizontalPosition >= 0 &&\n        horizontalPosition + elementHeight <= windowHeight\n\n    if (position === 'top') {\n        return canPlaceVertically && wrapperY - elementHeight - gap >= 0\n    } else if (position === 'right') {\n        return (\n            canPlaceHorizontally &&\n            wrapperX + wrapperWidth + elementWidth + gap <= windowWidth\n        )\n    } else if (position === 'left') {\n        return canPlaceHorizontally && wrapperX - elementWidth - gap >= 0\n    } else if (position === 'bottom') {\n        return (\n            canPlaceVertically &&\n            wrapperY + wrapperHeight + elementHeight + gap <= windowHeight\n        )\n    }\n    return false\n}\n\nconst _calculateVerticalPosition = (\n    wrapperPosition,\n    wrapperDimensions,\n    elementDimensions\n) => {\n    return (\n        wrapperPosition.x +\n        (wrapperDimensions.width - elementDimensions.width) / 2\n    )\n}\nconst _calculateHorizontalPosition = (\n    wrapperPosition,\n    wrapperDimensions,\n    elementDimensions\n) => {\n    return (\n        wrapperPosition.y +\n        (wrapperDimensions.height - elementDimensions.height) / 2\n    )\n}\n\nconst calculateTopCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const y = wrapperPosition.y - elementDimensions.height - gap\n    return { x, y }\n}\n\nconst calculateBottomCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const y = wrapperPosition.y + wrapperDimensions.height + gap\n    return { x, y }\n}\n\nconst calculateRightCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = wrapperPosition.x + wrapperDimensions.width + gap\n    const y = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    return { x, y }\n}\n\nconst calculateLeftCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = wrapperPosition.x - elementDimensions.width - gap\n    const y = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    return { x, y }\n}\n\nconst calculatePosition = (\n    position,\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    if (position === 'top') {\n        return calculateTopCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'right') {\n        return calculateRightCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'bottom') {\n        return calculateBottomCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'left') {\n        return calculateLeftCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    }\n    return wrapperPosition\n}\n\nexport {\n    hasEnoughSpace,\n    calculatePosition,\n    calculateTopCenterPosition,\n    calculateBottomCenterPosition,\n    calculateRightCenterPosition,\n    calculateLeftCenterPosition\n}\n","import './styles/tooltip.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { hasEnoughSpace, calculatePosition } from './utils/PositioningUtils'\n\nclass Tooltip extends React.Component {\n    constructor(props, context) {\n        super(props, context)\n        this.state = { visible: false }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // only update on state or prop changes\n        return (\n            this.state.visible !== nextState.visible ||\n            this.props.position !== nextProps.position ||\n            this.props.text !== nextProps.text ||\n            this.props.hideOnScroll !== nextProps.hideOnScroll ||\n            this.props.delayShow !== nextProps.delayShow ||\n            this.props.delayHide !== nextProps.delayHide ||\n            this.props.gapSize !== nextProps.gapSize ||\n            this.props.children !== nextProps.children\n        )\n    }\n\n    componentDidUpdate() {\n        if (this.wrapper && this.state.visible) {\n            // Interact with the DOM after a state update\n            this._updateTooltipPosition()\n        }\n    }\n\n    componentWillUnmount() {\n        this._clearDelayTimeout()\n        this._removeScrollListener()\n    }\n\n    _initScrollListener() {\n        document.addEventListener('scroll', this._hide, true)\n    }\n\n    _removeScrollListener() {\n        document.removeEventListener('scroll', this._hide, true)\n    }\n\n    _clearDelayTimeout() {\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout)\n        }\n    }\n\n    _show = () => {\n        this._delayAction(() => {\n            this.setState(() => ({ visible: true }))\n            if (this.props.hideOnScroll) {\n                this._initScrollListener()\n            }\n        }, this.props.delayShow)\n    }\n    _hide = () => {\n        this._delayAction(() => {\n            this._clearDelayTimeout()\n            this.setState(() => ({ visible: false }))\n            if (this.props.hideOnScroll) {\n                this._removeScrollListener()\n            }\n        }, this.props.delayHide)\n    }\n\n    _delayAction(actionFn, delay) {\n        this._clearDelayTimeout()\n        this.delayTimeout = setTimeout(actionFn, delay)\n    }\n\n    _updateTooltipPosition = () => {\n        const { position, allowVaguePositioning, gapSize } = this.props\n        const wrapperRect = this.wrapper.getBoundingClientRect()\n        const tooltipRect = this.tooltip.getBoundingClientRect()\n\n        // Instead of using the documentElement find the nearest absolutely positioned element\n        const documentEl = document.documentElement\n        let node = this.wrapper\n        let foundParent = false\n        while (!foundParent) {\n            const styles = getComputedStyle(node)\n            const position = styles.getPropertyValue('position')\n            if (\n                position === 'absolute' ||\n                node === documentEl ||\n                !node.parentElement\n            ) {\n                foundParent = true\n            } else {\n                node = node.parentElement\n            }\n        }\n        const nodeRect = node.getBoundingClientRect()\n        const windowDimensions = {\n            height: nodeRect.height,\n            width: nodeRect.width\n        }\n\n        const tooltipDimensions = {\n            height: tooltipRect.height,\n            width: tooltipRect.width\n        }\n        const wrapperDimensions = {\n            height: wrapperRect.height,\n            width: wrapperRect.width\n        }\n        const wrapperPositionRelative = {\n            x: wrapperRect.left - nodeRect.left,\n            y: wrapperRect.top - nodeRect.top\n        }\n        const wrapperPositionAbsolute = {\n            x: wrapperRect.left,\n            y: wrapperRect.top\n        }\n\n        const positionsToTry =\n            position === 'auto'\n                ? ['top', 'right', 'bottom', 'left', 'top']\n                : [position]\n\n        for (let index = 0; index < positionsToTry.length; index++) {\n            const currentPosition = positionsToTry[index]\n            const enoughSpaceAtPosition = hasEnoughSpace(\n                windowDimensions,\n                tooltipDimensions,\n                wrapperDimensions,\n                wrapperPositionRelative,\n                currentPosition,\n                gapSize\n            )\n\n            if (enoughSpaceAtPosition || index === positionsToTry.length - 1) {\n                const tooltipPosition = calculatePosition(\n                    currentPosition,\n                    wrapperDimensions,\n                    wrapperPositionAbsolute,\n                    tooltipDimensions,\n                    gapSize\n                )\n                this.tooltip.style.top = `${tooltipPosition.y}px`\n                this.tooltip.style.left =\n                    tooltipPosition.x < 0 && allowVaguePositioning\n                        ? `${2 * gapSize}px` // not centered but fully visible\n                        : `${tooltipPosition.x}px`\n\n                if (currentPosition !== position) {\n                    this.tooltip.className = this._getClassNameForPosition(\n                        currentPosition\n                    )\n                }\n                break\n            }\n        }\n    }\n\n    _getClassNameForPosition = position => {\n        const { visible } = this.state\n        const { tooltipClassName, inverted } = this.props\n        const className = classNames(\n            'reactist tooltip',\n            { visible, inverted },\n            tooltipClassName\n        )\n        if (visible) {\n            return classNames(className, {\n                arrow_top: position === 'bottom',\n                arrow_right: position === 'left',\n                arrow_bottom: position === 'auto' || position === 'top',\n                arrow_left: position === 'right'\n            })\n        }\n        return className\n    }\n\n    render() {\n        if (!this.props.text) {\n            return (\n                <div className=\"reactist tooltip__wrapper\">\n                    {this.props.children}\n                </div>\n            )\n        }\n\n        const tooltipClass = this._getClassNameForPosition(this.props.position)\n        const wrapperClass = classNames(\n            'reactist tooltip__wrapper',\n            this.props.wrapperClassName\n        )\n        return (\n            <span\n                className={wrapperClass}\n                onMouseEnter={this._show}\n                onMouseLeave={this._hide}\n                ref={wrapper => (this.wrapper = wrapper)}\n            >\n                {this.props.children}\n                <span\n                    className={tooltipClass}\n                    ref={tooltip => (this.tooltip = tooltip)}\n                >\n                    <span className=\"tooltip__text\">{this.props.text}</span>\n                </span>\n            </span>\n        )\n    }\n}\nTooltip.displayName = 'Tooltip'\nTooltip.defaultProps = {\n    position: 'auto',\n    hideOnScroll: true,\n    delayShow: 500,\n    delayHide: 0,\n    allowVaguePositioning: false,\n    inverted: false,\n    gapSize: 5 // default size of the arrow (see `tooltip.less`)\n}\nTooltip.propTypes = {\n    /**\n     * Position of the tooltip. Defaults to `auto`.\n     * `auto` tries to position the tooltip to the top,\n     * if there's not enough space it tries to position the tooltip clockwise (right, bottom, left).\n     * Setting a distinct value like `right` will always position the tooltip right, regardless of available space.\n     */\n    position: PropTypes.oneOf(['auto', 'top', 'right', 'bottom', 'left']),\n    /**\n     * Whether vague positioning is allowed. When set to true the tooltip prefers to be fully visible over being correctly centered.\n     */\n    allowVaguePositioning: PropTypes.bool,\n    /** Text that is displayed inside the tooltip */\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    /** Delay before the tooltip appears and disappears (in ms). */\n    /** Set whether scrolling should hide the tooltip or not. */\n    hideOnScroll: PropTypes.bool,\n    /** How long to wait after hovering before the tooltip is shown (in ms). */\n    delayShow: PropTypes.number,\n    /** How long to wait after unhovering before the tooltip is hidden (in ms). */\n    delayHide: PropTypes.number,\n    /** Children that are wrapped by the toolip. */\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    /** Additional css class that is applied to the wrapper element. */\n    wrapperClassName: PropTypes.string,\n    /** Additional css class that is applied to the tooltip element. */\n    tooltipClassName: PropTypes.string,\n    /** Inverted tooltips have a light background with dark text. */\n    inverted: PropTypes.bool,\n    /** Gap between the tooltip wrapper and the arrow  */\n    gapSize: PropTypes.number\n}\n\nexport default Tooltip\n","import './styles/button.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport Tooltip from './Tooltip'\n\nclass Button extends React.Component {\n    _onClick = event => {\n        event.preventDefault()\n        if (!this.props.disabled && !this.props.loading && this.props.onClick) {\n            this.props.onClick()\n        }\n    }\n\n    render() {\n        const { data_tip } = this.props\n\n        const className = classNames(\n            'reactist button',\n            {\n                secondary: this.props.secondary,\n                small: this.props.small,\n                large: this.props.large,\n                white: this.props.white,\n                busy: this.props.loading,\n                danger: this.props.danger\n            },\n            this.props.className\n        )\n\n        const button = (\n            <button\n                className={className}\n                disabled={this.props.disabled}\n                onClick={this._onClick}\n            >\n                <div className=\"wrapper\">\n                    <span>{this.props.name}</span>\n                </div>\n            </button>\n        )\n\n        // conditionally wrap into tooltip\n        return data_tip ? <Tooltip text={data_tip}>{button}</Tooltip> : button\n    }\n}\nButton.displayName = 'Button'\nButton.defaultProps = {\n    secondary: false,\n    small: false,\n    white: false,\n    loading: false,\n    disabled: false,\n    danger: false\n}\nButton.propTypes = {\n    /** Text that is displayed on the button. */\n    name: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    /**\n     * Function that is called when the button is clicked.\n     * Is only invoked when disabled is not set.\n     */\n    onClick: PropTypes.func,\n    /** Secondary style. */\n    secondary: PropTypes.bool,\n    /** Small style. */\n    small: PropTypes.bool,\n    /** Large style. */\n    large: PropTypes.bool,\n    /** White style. */\n    white: PropTypes.bool,\n    /** Loading style. Prevents onClick from being called. */\n    loading: PropTypes.bool,\n    /** Disabled style. Prevents onClick from being called. */\n    disabled: PropTypes.bool,\n    /** Danger style. */\n    danger: PropTypes.bool,\n    /** Tooltip that is displayed on hover. */\n    data_tip: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    /** Additional css class applied to the button. */\n    className: PropTypes.string\n}\n\nexport default Button\n"],"sourceRoot":""}