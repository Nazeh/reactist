{"version":3,"sources":["webpack://reactist/webpack/universalModuleDefinition","webpack://reactist/webpack/bootstrap","webpack://reactist/external \"prop-types\"","webpack://reactist/external {\"root\":\"React\",\"commonjs2\":\"react\",\"commonjs\":\"react\",\"amd\":\"react\"}","webpack://reactist/external \"classnames\"","webpack://reactist/external {\"root\":\"ReactDOM\",\"commonjs2\":\"react-dom\",\"commonjs\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://reactist/./src/components/Dropdown.jsx","webpack://reactist/./src/components/utils/PositioningUtils.js","webpack://reactist/./src/components/Tooltip.jsx","webpack://reactist/./src/components/ColorPicker.jsx"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Box","props","context","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","state","show_body","top","_handleClickOutside","_assertThisInitialized","_setPosition","_toggleShowBody","_timeout","React","Component","document","removeEventListener","clearTimeout","event","_this2","ReactDOM","findDOMNode","contains","target","allowBodyInteractions","setTimeout","onHideBody","onShowBody","addEventListener","setState","_trigger","children","cloneElement","onClick","body","scrolling_parent","getElementById","dropdown","dropdown_vertical_position","offsetTop","dropdown_trigger_height","querySelector","clientHeight","dropdown_body_height","scrollTop","_this$props","_this$props$right","right","_body","setPosition","class_name","classNames","body_wrapper","with_arrow","bottom","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","style","position","display","_getBodyComponent","_getTriggerComponent","displayName","propTypes","PropTypes","bool","string","func","any","Trigger","_this3","_onClick","preventDefault","stopPropagation","Body","left","ref","id","__webpack_exports__","hasEnoughSpace","windowDimensions","elementDimensions","wrapperDimensions","wrapperPosition","gap","arguments","length","undefined","windowHeight","height","windowWidth","width","elementHeight","elementWidth","wrapperHeight","wrapperWidth","wrapperX","x","wrapperY","y","verticalPosition","_calculateVerticalPosition","horizontalPosition","_calculateHorizontalPosition","canPlaceVertically","canPlaceHorizontally","calculatePosition","calculateTopCenterPosition","calculateRightCenterPosition","calculateBottomCenterPosition","calculateLeftCenterPosition","Tooltip","_defineProperty","_delayAction","visible","hideOnScroll","_initScrollListener","delayShow","_clearDelayTimeout","_removeScrollListener","delayHide","allowVaguePositioning","gapSize","wrapperRect","wrapper","getBoundingClientRect","tooltipRect","tooltip","documentEl","documentElement","node","foundParent","getComputedStyle","getPropertyValue","parentElement","nodeRect","tooltipDimensions","wrapperPositionRelative","wrapperPositionAbsolute","positionsToTry","index","currentPosition","tooltipPosition","concat","_getClassNameForPosition","_this$props2","tooltipClassName","inverted","arrow_top","arrow_right","arrow_bottom","arrow_left","nextProps","nextState","text","_updateTooltipPosition","_hide","delayTimeout","actionFn","delay","external_root_React_commonjs2_react_commonjs_react_amd_react_default","tooltipClass","wrapperClass","wrapperClassName","onMouseEnter","_show","onMouseLeave","defaultProps","oneOf","oneOfType","arrayOf","isRequired","number","ColorItem","COLORS","react__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","_Dropdown__WEBPACK_IMPORTED_MODULE_3__","_Tooltip__WEBPACK_IMPORTED_MODULE_4__","_isNamedColor","color","_getColor","colorList","colorIndex","ColorPicker","_ref","onChange","_ref$colorList","backgroundColor","reduce","items","currentColor","currentIndex","isNamed","push","isActive","shape","_ref2","item"],"mappings":"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","file":"ColorPicker.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"), require(\"classnames\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"reactist\", [\"prop-types\", \"react\", \"classnames\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"reactist\"] = factory(require(\"prop-types\"), require(\"react\"), require(\"classnames\"), require(\"react-dom\"));\n\telse\n\t\troot[\"reactist\"] = factory(root[\"prop-types\"], root[\"React\"], root[\"classnames\"], root[\"ReactDOM\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__, __WEBPACK_EXTERNAL_MODULE__3__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","import './styles/dropdown.less'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nclass Box extends React.Component {\n    constructor(props, context) {\n        super(props, context)\n        this.state = {\n            show_body: false,\n            top: props.top || false\n        }\n\n        this._handleClickOutside = this._handleClickOutside.bind(this)\n        this._setPosition = this._setPosition.bind(this)\n        this._toggleShowBody = this._toggleShowBody.bind(this)\n\n        this._timeout = null\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this._handleClickOutside, true)\n        if (this._timeout) {\n            clearTimeout(this._timeout)\n        }\n    }\n\n    _handleClickOutside(event) {\n        const dropdown_dom_node = ReactDOM.findDOMNode(this)\n\n        if (!dropdown_dom_node.contains(event.target)) this._toggleShowBody()\n        else if (!this.props.allowBodyInteractions) {\n            // won't close when body interactions are allowed\n            this._timeout = setTimeout(() => {\n                if (this.state.show_body) {\n                    this._toggleShowBody()\n                }\n            }, 100)\n        }\n    }\n\n    _toggleShowBody() {\n        if (!this.state.show_body) {\n            // will show\n            if (this.props.onShowBody) this.props.onShowBody()\n            document.addEventListener('click', this._handleClickOutside, true)\n        } else {\n            // will hide\n            if (this.props.onHideBody) this.props.onHideBody()\n            document.removeEventListener(\n                'click',\n                this._handleClickOutside,\n                true\n            )\n        }\n\n        this.setState({\n            show_body: !this.state.show_body\n        })\n    }\n\n    _getTriggerComponent() {\n        let _trigger = this.props.children[0]\n        return React.cloneElement(_trigger, { onClick: this._toggleShowBody })\n    }\n\n    // https://facebook.github.io/react/docs/refs-and-the-dom.html#exposing-dom-refs-to-parent-components\n    _setPosition(body) {\n        if (body) {\n            const scrolling_parent = document.getElementById(\n                this.props.scrolling_parent\n            )\n\n            if (scrolling_parent) {\n                const dropdown = ReactDOM.findDOMNode(this)\n                const dropdown_vertical_position = ReactDOM.findDOMNode(this)\n                    .offsetTop\n                const dropdown_trigger_height = dropdown.querySelector(\n                    '.trigger'\n                ).clientHeight\n                const dropdown_body_height = body.clientHeight\n\n                const scrolling_parent_height = scrolling_parent.clientHeight\n                const scrolling_parent_offset = scrolling_parent.scrollTop\n\n                const bottom_offset =\n                    scrolling_parent_height +\n                    scrolling_parent_offset -\n                    dropdown_vertical_position -\n                    dropdown_trigger_height\n\n                const top = bottom_offset < dropdown_body_height\n\n                if (top !== this.state.top) {\n                    this.setState({ top })\n                }\n            }\n        }\n    }\n\n    _getBodyComponent() {\n        const { top } = this.state\n        const { right = false, children } = this.props\n        const _body = children[1]\n        const props = { top, right, setPosition: this._setPosition }\n\n        const class_name = classNames({\n            body_wrapper: true,\n            with_arrow: true,\n            top: top,\n            bottom: !top\n        })\n\n        if (this.state.show_body) {\n            return (\n                <div className={class_name} style={{ position: 'relative' }}>\n                    {React.cloneElement(_body, props)}\n                </div>\n            )\n        }\n\n        return false\n    }\n\n    render() {\n        const className = classNames('reactist dropdown', this.props.className)\n        const { top } = this.state\n\n        return (\n            <div style={{ display: 'inline-block' }} className={className}>\n                {top && this._getBodyComponent()}\n                {this._getTriggerComponent()}\n                {!top && this._getBodyComponent()}\n            </div>\n        )\n    }\n}\nBox.displayName = 'Dropdown.Box'\nBox.propTypes = {\n    /** Whether the dropdown should open to the top. */\n    top: PropTypes.bool,\n    /** Whether the dropdown should open to the right. */\n    right: PropTypes.bool,\n    /** Id of the scrolling parent element to place dropdown in it. */\n    scrolling_parent: PropTypes.string,\n    /** Whether to keep dropdown open when interacted with the Body content. */\n    allowBodyInteractions: PropTypes.bool,\n    /** Callback function when the body is shown. */\n    onShowBody: PropTypes.func,\n    /** Callback function when the body is hidden. */\n    onHideBody: PropTypes.func,\n    /** Additional css class applied to the Dropdown. */\n    className: PropTypes.string,\n    /** Should be two elements: Dropdown.Trigger and Dropdown.Body. */\n    children: PropTypes.any\n}\n\nclass Trigger extends React.Component {\n    constructor(props, context) {\n        super(props, context)\n        this._onClick = this._onClick.bind(this)\n    }\n\n    _onClick(event) {\n        event.preventDefault()\n        event.stopPropagation()\n        this.props.onClick(event)\n    }\n\n    render() {\n        const style = {\n            display: 'block'\n        }\n\n        return (\n            <div style={style} className=\"trigger\" onClick={this._onClick}>\n                {this.props.children}\n            </div>\n        )\n    }\n}\nTrigger.displayName = 'Dropdown.Trigger'\nTrigger.propTypes = {\n    /** INTERNAL Callback when the trigger is clicked. Setting this yourself won't have an effect. */\n    onClick: PropTypes.func,\n    /** Content of the dropdown trigger. Can be anything from a string to component(s). */\n    children: PropTypes.any\n}\n\nclass Body extends React.Component {\n    render() {\n        let style = {\n            position: 'absolute',\n            right: 0,\n            top: 0\n        }\n\n        if (this.props.top) {\n            style.top = 'auto'\n            style.bottom = 0\n        }\n\n        if (this.props.right) {\n            style.right = 'auto'\n            style.left = 0\n        }\n\n        return (\n            <div\n                ref={this.props.setPosition}\n                style={style}\n                className=\"body\"\n                id=\"reactist-dropdown-body\"\n            >\n                {this.props.children}\n            </div>\n        )\n    }\n}\nBody.displayName = 'Dropdown.Body'\nBody.propTypes = {\n    /** INTERNAL Whether the dropdown should open to the top. Set this on the Dropdown.Box. */\n    top: PropTypes.bool,\n    /** INTERNAL Whether the dropdown should open to the right. Set this on the Dropdown.Box. */\n    right: PropTypes.bool,\n    /** INTERNAL Callback to correctly set the position of the dropdown. Setting this yourself wont' have an effect. */\n    setPosition: PropTypes.func,\n    /** Content of the dropdown body. Can be anything from a string to component(s). */\n    children: PropTypes.any\n}\n\nexport default { Box, Trigger, Body }\n","const hasEnoughSpace = (\n    windowDimensions,\n    elementDimensions,\n    wrapperDimensions,\n    wrapperPosition,\n    position,\n    gap = 0\n) => {\n    const { height: windowHeight, width: windowWidth } = windowDimensions\n    const { height: elementHeight, width: elementWidth } = elementDimensions\n    const { height: wrapperHeight, width: wrapperWidth } = wrapperDimensions\n    const { x: wrapperX, y: wrapperY } = wrapperPosition\n\n    const verticalPosition = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const horizontalPosition = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const canPlaceVertically =\n        verticalPosition >= 0 && verticalPosition + elementWidth <= windowWidth\n    const canPlaceHorizontally =\n        horizontalPosition >= 0 &&\n        horizontalPosition + elementHeight <= windowHeight\n\n    if (position === 'top') {\n        return canPlaceVertically && wrapperY - elementHeight - gap >= 0\n    } else if (position === 'right') {\n        return (\n            canPlaceHorizontally &&\n            wrapperX + wrapperWidth + elementWidth + gap <= windowWidth\n        )\n    } else if (position === 'left') {\n        return canPlaceHorizontally && wrapperX - elementWidth - gap >= 0\n    } else if (position === 'bottom') {\n        return (\n            canPlaceVertically &&\n            wrapperY + wrapperHeight + elementHeight + gap <= windowHeight\n        )\n    }\n    return false\n}\n\nconst _calculateVerticalPosition = (\n    wrapperPosition,\n    wrapperDimensions,\n    elementDimensions\n) => {\n    return (\n        wrapperPosition.x +\n        (wrapperDimensions.width - elementDimensions.width) / 2\n    )\n}\nconst _calculateHorizontalPosition = (\n    wrapperPosition,\n    wrapperDimensions,\n    elementDimensions\n) => {\n    return (\n        wrapperPosition.y +\n        (wrapperDimensions.height - elementDimensions.height) / 2\n    )\n}\n\nconst calculateTopCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const y = wrapperPosition.y - elementDimensions.height - gap\n    return { x, y }\n}\n\nconst calculateBottomCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = _calculateVerticalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    const y = wrapperPosition.y + wrapperDimensions.height + gap\n    return { x, y }\n}\n\nconst calculateRightCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = wrapperPosition.x + wrapperDimensions.width + gap\n    const y = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    return { x, y }\n}\n\nconst calculateLeftCenterPosition = (\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    const x = wrapperPosition.x - elementDimensions.width - gap\n    const y = _calculateHorizontalPosition(\n        wrapperPosition,\n        wrapperDimensions,\n        elementDimensions\n    )\n    return { x, y }\n}\n\nconst calculatePosition = (\n    position,\n    wrapperDimensions,\n    wrapperPosition,\n    elementDimensions,\n    gap = 0\n) => {\n    if (position === 'top') {\n        return calculateTopCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'right') {\n        return calculateRightCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'bottom') {\n        return calculateBottomCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    } else if (position === 'left') {\n        return calculateLeftCenterPosition(\n            wrapperDimensions,\n            wrapperPosition,\n            elementDimensions,\n            gap\n        )\n    }\n    return wrapperPosition\n}\n\nexport {\n    hasEnoughSpace,\n    calculatePosition,\n    calculateTopCenterPosition,\n    calculateBottomCenterPosition,\n    calculateRightCenterPosition,\n    calculateLeftCenterPosition\n}\n","import './styles/tooltip.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport { hasEnoughSpace, calculatePosition } from './utils/PositioningUtils'\n\nclass Tooltip extends React.Component {\n    constructor(props, context) {\n        super(props, context)\n        this.state = { visible: false }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        // only update on state or prop changes\n        return (\n            this.state.visible !== nextState.visible ||\n            this.props.position !== nextProps.position ||\n            this.props.text !== nextProps.text ||\n            this.props.hideOnScroll !== nextProps.hideOnScroll ||\n            this.props.delayShow !== nextProps.delayShow ||\n            this.props.delayHide !== nextProps.delayHide ||\n            this.props.gapSize !== nextProps.gapSize ||\n            this.props.children !== nextProps.children\n        )\n    }\n\n    componentDidUpdate() {\n        if (this.wrapper && this.state.visible) {\n            // Interact with the DOM after a state update\n            this._updateTooltipPosition()\n        }\n    }\n\n    componentWillUnmount() {\n        this._clearDelayTimeout()\n        this._removeScrollListener()\n    }\n\n    _initScrollListener() {\n        document.addEventListener('scroll', this._hide, true)\n    }\n\n    _removeScrollListener() {\n        document.removeEventListener('scroll', this._hide, true)\n    }\n\n    _clearDelayTimeout() {\n        if (this.delayTimeout) {\n            clearTimeout(this.delayTimeout)\n        }\n    }\n\n    _show = () => {\n        this._delayAction(() => {\n            this.setState(() => ({ visible: true }))\n            if (this.props.hideOnScroll) {\n                this._initScrollListener()\n            }\n        }, this.props.delayShow)\n    }\n    _hide = () => {\n        this._delayAction(() => {\n            this._clearDelayTimeout()\n            this.setState(() => ({ visible: false }))\n            if (this.props.hideOnScroll) {\n                this._removeScrollListener()\n            }\n        }, this.props.delayHide)\n    }\n\n    _delayAction(actionFn, delay) {\n        this._clearDelayTimeout()\n        this.delayTimeout = setTimeout(actionFn, delay)\n    }\n\n    _updateTooltipPosition = () => {\n        const { position, allowVaguePositioning, gapSize } = this.props\n        const wrapperRect = this.wrapper.getBoundingClientRect()\n        const tooltipRect = this.tooltip.getBoundingClientRect()\n\n        // Instead of using the documentElement find the nearest absolutely positioned element\n        const documentEl = document.documentElement\n        let node = this.wrapper\n        let foundParent = false\n        while (!foundParent) {\n            const styles = getComputedStyle(node)\n            const position = styles.getPropertyValue('position')\n            if (\n                position === 'absolute' ||\n                node === documentEl ||\n                !node.parentElement\n            ) {\n                foundParent = true\n            } else {\n                node = node.parentElement\n            }\n        }\n        const nodeRect = node.getBoundingClientRect()\n        const windowDimensions = {\n            height: nodeRect.height,\n            width: nodeRect.width\n        }\n\n        const tooltipDimensions = {\n            height: tooltipRect.height,\n            width: tooltipRect.width\n        }\n        const wrapperDimensions = {\n            height: wrapperRect.height,\n            width: wrapperRect.width\n        }\n        const wrapperPositionRelative = {\n            x: wrapperRect.left - nodeRect.left,\n            y: wrapperRect.top - nodeRect.top\n        }\n        const wrapperPositionAbsolute = {\n            x: wrapperRect.left,\n            y: wrapperRect.top\n        }\n\n        const positionsToTry =\n            position === 'auto'\n                ? ['top', 'right', 'bottom', 'left', 'top']\n                : [position]\n\n        for (let index = 0; index < positionsToTry.length; index++) {\n            const currentPosition = positionsToTry[index]\n            const enoughSpaceAtPosition = hasEnoughSpace(\n                windowDimensions,\n                tooltipDimensions,\n                wrapperDimensions,\n                wrapperPositionRelative,\n                currentPosition,\n                gapSize\n            )\n\n            if (enoughSpaceAtPosition || index === positionsToTry.length - 1) {\n                const tooltipPosition = calculatePosition(\n                    currentPosition,\n                    wrapperDimensions,\n                    wrapperPositionAbsolute,\n                    tooltipDimensions,\n                    gapSize\n                )\n                this.tooltip.style.top = `${tooltipPosition.y}px`\n                this.tooltip.style.left =\n                    tooltipPosition.x < 0 && allowVaguePositioning\n                        ? `${2 * gapSize}px` // not centered but fully visible\n                        : `${tooltipPosition.x}px`\n\n                if (currentPosition !== position) {\n                    this.tooltip.className = this._getClassNameForPosition(\n                        currentPosition\n                    )\n                }\n                break\n            }\n        }\n    }\n\n    _getClassNameForPosition = position => {\n        const { visible } = this.state\n        const { tooltipClassName, inverted } = this.props\n        const className = classNames(\n            'reactist tooltip',\n            { visible, inverted },\n            tooltipClassName\n        )\n        if (visible) {\n            return classNames(className, {\n                arrow_top: position === 'bottom',\n                arrow_right: position === 'left',\n                arrow_bottom: position === 'auto' || position === 'top',\n                arrow_left: position === 'right'\n            })\n        }\n        return className\n    }\n\n    render() {\n        if (!this.props.text) {\n            return (\n                <div className=\"reactist tooltip__wrapper\">\n                    {this.props.children}\n                </div>\n            )\n        }\n\n        const tooltipClass = this._getClassNameForPosition(this.props.position)\n        const wrapperClass = classNames(\n            'reactist tooltip__wrapper',\n            this.props.wrapperClassName\n        )\n        return (\n            <span\n                className={wrapperClass}\n                onMouseEnter={this._show}\n                onMouseLeave={this._hide}\n                ref={wrapper => (this.wrapper = wrapper)}\n            >\n                {this.props.children}\n                <span\n                    className={tooltipClass}\n                    ref={tooltip => (this.tooltip = tooltip)}\n                >\n                    <span className=\"tooltip__text\">{this.props.text}</span>\n                </span>\n            </span>\n        )\n    }\n}\nTooltip.displayName = 'Tooltip'\nTooltip.defaultProps = {\n    position: 'auto',\n    hideOnScroll: true,\n    delayShow: 500,\n    delayHide: 0,\n    allowVaguePositioning: false,\n    inverted: false,\n    gapSize: 5 // default size of the arrow (see `tooltip.less`)\n}\nTooltip.propTypes = {\n    /**\n     * Position of the tooltip. Defaults to `auto`.\n     * `auto` tries to position the tooltip to the top,\n     * if there's not enough space it tries to position the tooltip clockwise (right, bottom, left).\n     * Setting a distinct value like `right` will always position the tooltip right, regardless of available space.\n     */\n    position: PropTypes.oneOf(['auto', 'top', 'right', 'bottom', 'left']),\n    /**\n     * Whether vague positioning is allowed. When set to true the tooltip prefers to be fully visible over being correctly centered.\n     */\n    allowVaguePositioning: PropTypes.bool,\n    /** Text that is displayed inside the tooltip */\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]).isRequired,\n    /** Delay before the tooltip appears and disappears (in ms). */\n    /** Set whether scrolling should hide the tooltip or not. */\n    hideOnScroll: PropTypes.bool,\n    /** How long to wait after hovering before the tooltip is shown (in ms). */\n    delayShow: PropTypes.number,\n    /** How long to wait after unhovering before the tooltip is hidden (in ms). */\n    delayHide: PropTypes.number,\n    /** Children that are wrapped by the toolip. */\n    children: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    /** Additional css class that is applied to the wrapper element. */\n    wrapperClassName: PropTypes.string,\n    /** Additional css class that is applied to the tooltip element. */\n    tooltipClassName: PropTypes.string,\n    /** Inverted tooltips have a light background with dark text. */\n    inverted: PropTypes.bool,\n    /** Gap between the tooltip wrapper and the arrow  */\n    gapSize: PropTypes.number\n}\n\nexport default Tooltip\n","import './styles/color_picker.less'\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Dropdown from './Dropdown'\nimport Tooltip from './Tooltip'\n\nconst COLORS = [\n    '#606060',\n    '#4A90E2',\n    '#03B3B2',\n    '#008299',\n    '#82BA00',\n    '#D24726',\n    '#AC193D',\n    '#DC4FAD',\n    '#3BD5FB',\n    '#74E8D3',\n    '#FFCC00',\n    '#FB886E',\n    '#CCCCCC'\n]\n\nconst _isNamedColor = color => typeof color !== 'string'\nconst _getColor = (colorList, colorIndex) => {\n    const index = colorIndex >= colorList.length ? 0 : colorIndex\n    return colorList[index]\n}\n\nconst ColorPicker = ({ color, onChange, colorList = COLORS }) => (\n    <Dropdown.Box right className=\"reactist color_picker\">\n        <Dropdown.Trigger>\n            <span\n                className=\"color_trigger\"\n                style={{\n                    backgroundColor: _isNamedColor(colorList[color])\n                        ? _getColor(colorList, color).color\n                        : _getColor(colorList, color)\n                }}\n            >\n                <span className=\"color_trigger--inner_ring\" />\n            </span>\n        </Dropdown.Trigger>\n        <Dropdown.Body>\n            <div className=\"color_options\">\n                {colorList.reduce((items, currentColor, currentIndex) => {\n                    const isNamed = _isNamedColor(currentColor)\n                    items.push(\n                        <ColorItem\n                            isActive={\n                                color >= colorList.length\n                                    ? currentIndex === 0\n                                    : currentIndex === color\n                            }\n                            key={currentIndex}\n                            color={isNamed ? currentColor.color : currentColor}\n                            colorIndex={currentIndex}\n                            onClick={onChange}\n                            tooltip={isNamed ? currentColor.name : null}\n                        />\n                    )\n                    return items\n                }, [])}\n            </div>\n        </Dropdown.Body>\n    </Dropdown.Box>\n)\nColorPicker.displayName = 'ColorPicker'\nColorPicker.defaultProps = {\n    color: 0\n}\nColorPicker.propTypes = {\n    /** Currently selected color. Needs to be the index of the COLORS array. */\n    color: PropTypes.number.isRequired,\n    /** Callback that is invoked when a color has been selected. Is called with the index of the COLORS array. */\n    onChange: PropTypes.func,\n    /** Optional list of color codes. Either as an array of strings or an array of objects with the color name. Defaults to COLORS array without names. */\n    colorList: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.shape({ color: PropTypes.string, name: PropTypes.string })\n        ])\n    )\n}\n\nconst ColorItem = ({ color, colorIndex, isActive, onClick, tooltip }) => {\n    const item = (\n        <span\n            className={'reactist color_item' + (isActive ? ' active' : '')}\n            style={{ backgroundColor: color }}\n            onClick={() => onClick && onClick(colorIndex)}\n        >\n            <span className=\"color_item--inner_ring\" />\n        </span>\n    )\n\n    return tooltip ? <Tooltip text={tooltip}>{item}</Tooltip> : item\n}\nColorItem.displayName = 'ColorItem'\nColorItem.propTypes = {\n    /** The color of the ColorItem as string. */\n    color: PropTypes.string.isRequired,\n    /** Index of the color to display. Is based upon the colorList array. */\n    colorIndex: PropTypes.number.isRequired,\n    /** Flag that can be used to highlight the currently selected item. */\n    isActive: PropTypes.bool,\n    /** Optional callback that is called when the item is clicked. */\n    onClick: PropTypes.func,\n    /** Optional tooltip to be shown when hovering the item. */\n    tooltip: PropTypes.string\n}\n\nexport default ColorPicker\nexport { ColorItem, COLORS }\n"],"sourceRoot":""}